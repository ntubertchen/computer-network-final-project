import java.net.Socket;
import java.io.ObjectOutputStream;
import java.io.IOException;
import java.util.concurrent.ConcurrentLinkedQueue;
import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import java.util.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yuchiang
 */
public class SingleChat extends javax.swing.JFrame implements Runnable{
    static Socket socket;
    static User user;
    String subject;
    static ConcurrentLinkedQueue<Header> i;
    /**
     * Creates new form MessagerGUI
     */
    public SingleChat(User user,Socket socket,ConcurrentLinkedQueue<Header> i) {
        this.user = user;
        this.socket = socket;
        this.i = i;
        initComponents();
    }

    public void addMessageToScreen(){
        Header t = i.poll();
        String sender,content;
        sender = t.getOwner();
        content = t.getMsg();
        MessageView.append(sender + ": " + content + "\n") ;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        TypeField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        MessageView = new javax.swing.JTextArea();
        SendButton = new javax.swing.JButton();
        NewFileButton = new javax.swing.JButton();
        ChatroomButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Messenger");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        TypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeFieldActionPerformed(evt);
            }
        });

        MessageView.setEditable(false);
        MessageView.setColumns(20);
        MessageView.setRows(5);
        jScrollPane2.setViewportView(MessageView);

        SendButton.setText("Send");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        NewFileButton.setText("Add files");
        NewFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFileButtonActionPerformed(evt);
            }
        });

        ChatroomButton.setText("History");
        ChatroomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChatroomButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(TypeField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(NewFileButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChatroomButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewFileButton)
                    .addComponent(ChatroomButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Header h = new Header();
        h.setType(Command.SEND_MSG);
        h.setUser(this.user);
        h.setReceiver(subject);
        System.out.println(subject);
        h.setOwner(this.user.getUsername());
        String msg = TypeField.getText();
        h.setMsg(msg);
        try{
            ObjectOutputStream objectOutput = new ObjectOutputStream(socket.getOutputStream());
            objectOutput.writeObject(h);
        }catch(IOException chats){
            System.out.println("client send button fail");
        }
        MessageView.append(this.user.getUsername()+":"+ msg + "\n") ;
        TypeField.setText("");
    }

    private void TypeFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void NewFileButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JFrame f = new JFrame("");
        SelectFiles panel = new SelectFiles();
        String path = panel.getFilePath();
        f.addWindowListener(
            new WindowAdapter(){
                public void windowClosing(WindowEvent e) {
                    System.exit(0);
                    }
                }
            );
        f.getContentPane().add(panel,"Center");
        f.setSize(panel.getPreferredSize());
        f.setVisible(true);
      
      
    }

    private void ChatroomButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        Header h = new Header();
        h.setType(Command.MSG_SYNC);
        h.setUser(this.user);
        h.setOwner(this.user.getUsername());
        String msg = TypeField.getText();
        try{
            ObjectOutputStream objectOutput = new ObjectOutputStream(socket.getOutputStream());
            objectOutput.writeObject(h);
        }catch(IOException chats){
            System.out.println("client send button fail");
        }
    }

    public void run() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MessagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MessagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MessagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MessagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify
    private javax.swing.JButton ChatroomButton;
    private javax.swing.JTextArea MessageView;
    private javax.swing.JButton NewFileButton;
    private javax.swing.JButton SendButton;
    private javax.swing.JTextField TypeField;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
}
